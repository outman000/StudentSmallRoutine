// <auto-generated />
using System;
using Dtol;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dtol.Migrations
{
    [DbContext(typeof(DtolContext))]
    [Migration("20200414074048_modifydatabase")]
    partial class modifydatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dtol.dtol.Class_Info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassCode");

                    b.Property<string>("ClassName");

                    b.Property<int?>("Grade_InfoId");

                    b.HasKey("id");

                    b.HasIndex("Grade_InfoId");

                    b.ToTable("Class_Info");
                });

            modelBuilder.Entity("Dtol.dtol.Grade_Info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GradeCode");

                    b.Property<string>("GradeName");

                    b.Property<int?>("Station_InfoId");

                    b.HasKey("id");

                    b.HasIndex("Station_InfoId");

                    b.ToTable("Grade_Info");
                });

            modelBuilder.Entity("Dtol.dtol.Health_Info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdNumber");

                    b.Property<string>("IsFamilyHot");

                    b.Property<string>("IsFamilyThroat");

                    b.Property<string>("IsFamilyWeakt");

                    b.Property<string>("IsHot");

                    b.Property<string>("IsThroat");

                    b.Property<string>("IsWeak");

                    b.HasKey("id");

                    b.ToTable("Health_Info");
                });

            modelBuilder.Entity("Dtol.dtol.School_Info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SchoolCode");

                    b.Property<string>("SchoolName");

                    b.HasKey("id");

                    b.ToTable("School_Info");
                });

            modelBuilder.Entity("Dtol.dtol.Station_Info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("School_InfoId");

                    b.Property<string>("StaffCode");

                    b.Property<string>("StaffName");

                    b.HasKey("id");

                    b.HasIndex("School_InfoId");

                    b.ToTable("Station_Info");
                });

            modelBuilder.Entity("Dtol.dtol.Student_Info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("ClassCode");

                    b.Property<string>("ClassName");

                    b.Property<string>("Country");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("GradeCode");

                    b.Property<string>("GradeName");

                    b.Property<int?>("Health_InfoId");

                    b.Property<string>("IdNumber");

                    b.Property<string>("Name");

                    b.Property<string>("PermanentAddress");

                    b.Property<string>("SchoolCode");

                    b.Property<string>("SchoolName");

                    b.Property<string>("Sex");

                    b.Property<int?>("class_InfoIdid");

                    b.Property<int?>("class_Infoid");

                    b.Property<string>("tag");

                    b.HasKey("id");

                    b.HasIndex("Health_InfoId");

                    b.HasIndex("class_InfoIdid");

                    b.HasIndex("class_Infoid");

                    b.ToTable("Student_Info");
                });

            modelBuilder.Entity("Dtol.dtol.UploadFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Catalog");

                    b.Property<string>("FileName");

                    b.Property<int>("ImgIndex");

                    b.Property<string>("InternalName");

                    b.Property<string>("Length");

                    b.Property<string>("Path");

                    b.Property<string>("PhysisticName");

                    b.Property<string>("Url");

                    b.Property<string>("pathMobile");

                    b.Property<string>("path_server");

                    b.Property<string>("upload_percent");

                    b.HasKey("id");

                    b.ToTable("UploadFile");
                });

            modelBuilder.Entity("Dtol.dtol.facultystaff_Info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Country");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("DepartCode");

                    b.Property<string>("DepartName");

                    b.Property<int?>("Health_InfoId");

                    b.Property<string>("IdNumber");

                    b.Property<string>("Name");

                    b.Property<string>("SchoolCode");

                    b.Property<string>("SchoolName");

                    b.Property<string>("Sex");

                    b.Property<string>("StaffCode");

                    b.Property<string>("StaffName");

                    b.Property<int?>("station_InfoId");

                    b.HasKey("id");

                    b.HasIndex("Health_InfoId");

                    b.HasIndex("station_InfoId");

                    b.ToTable("facultystaff_Info");
                });

            modelBuilder.Entity("Dtol.dtol.Class_Info", b =>
                {
                    b.HasOne("Dtol.dtol.Grade_Info", "Grade_Info")
                        .WithMany("class_Infos")
                        .HasForeignKey("Grade_InfoId");
                });

            modelBuilder.Entity("Dtol.dtol.Grade_Info", b =>
                {
                    b.HasOne("Dtol.dtol.Station_Info", "Station_Info")
                        .WithMany("Grade_Info")
                        .HasForeignKey("Station_InfoId");
                });

            modelBuilder.Entity("Dtol.dtol.Station_Info", b =>
                {
                    b.HasOne("Dtol.dtol.School_Info", "School_Info")
                        .WithMany("class_Infos")
                        .HasForeignKey("School_InfoId");
                });

            modelBuilder.Entity("Dtol.dtol.Student_Info", b =>
                {
                    b.HasOne("Dtol.dtol.Health_Info", "Health_Info")
                        .WithMany()
                        .HasForeignKey("Health_InfoId");

                    b.HasOne("Dtol.dtol.Class_Info", "class_InfoId")
                        .WithMany()
                        .HasForeignKey("class_InfoIdid");

                    b.HasOne("Dtol.dtol.Class_Info", "class_Info")
                        .WithMany()
                        .HasForeignKey("class_Infoid");
                });

            modelBuilder.Entity("Dtol.dtol.facultystaff_Info", b =>
                {
                    b.HasOne("Dtol.dtol.Health_Info", "Health_Info")
                        .WithMany()
                        .HasForeignKey("Health_InfoId");

                    b.HasOne("Dtol.dtol.Station_Info", "station_Info")
                        .WithMany()
                        .HasForeignKey("station_InfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
